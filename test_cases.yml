---
- summary: |
    Проверка возможности регистрации пользователя.
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться в игре.  
  prerequisites: |
    Открыта страница регистрации ("Sign Up").
  test-data: |
     Отсутствует.
  steps:
    1. Вводим Nickname.
    2. Вводим Emeil.
    3. Вводим Password (и подтверждение пароля).
    4. Нажимаем кнопку "Submit".
  expected-result: |
    Успешная регистрация пользователя.
    
- summary: |
    Проверка авторизации пользователя с существующими имейлом и паролем.
  requirement: |
    Пользователь должен войти в систему, имея верные имейлом и пароль.
  prerequisites: |
    Открыта страница авторизации ("Sign In").
  test-data: |
    Email = email, Password = password.
  steps:
    1. Вводим Emeil.
    2. Вводим Password.
    3. Нажимаем кнопку "Submit".
  expected-result: |     
    Успешная авторизация пользователя.

- summary: |
    Проверка авторизации пользователя через учетную запись на GitHub.
  requirement: |
    Пользователь должен иметь возможность авторизироваться, при наличии аккаунта на GitHub.
  prerequisites: |
    Открыта страница авторизации или регистрации ("Sign In"/"Sign Out").
  test-data: |
    Отсутствует.
  steps:
    - Нажимаем кнопку "Sign in with Github".
  expected-result: |     
    Успешная авторизация пользователя.

- summary: |
    Проверка авторизации пользователя через учетную запись на Discord.
  requirement: |
    Пользователь должен иметь возможность авторизироваться, при наличии аккаунта на Discord.
  prerequisites: |
    Открыта страница авторизации или регистрации ("Sign In"/"Sign Out").
  test-data: |
    Отсутствует.
  steps:
    - Нажимаем кнопку "Sign in with Discord".
  expected-result: |     
    Успешная авторизация пользователя.

- summary: |
    Проверка авторизации пользователя с несуществующими имейлом и паролем.
  requirement: |
    Пользователь должен войти в систему, имея верные имейлом и пароль.
  prerequisites: |
    Открыта страница авторизации ("Sign In").
  test-data: |
    Email = email, Password = 12QwertyuiO
  steps:
    1. Вводим Emeil.
    2. Вводим Password.
    3. Нажимаем кнопку "Submit".

- summary: |
    Создание игры авторизованным пользователем.
  requirement: |
    Авторизованный пользователь должен иметь возможность создать игру.
  prerequisites: |
    Пользователь авторизован.
  test-data: |
    Отсутствует.
  steps:
    1. Нажимаем на кнопку "With a bot" (Game Type). 
    2. Нажимаем на кнопку "Create Battle".
  expected-result: |     
    Игра успешно создана.

- summary: |
    Создание игры неавторизованным пользователем.
  requirement: |
    Неавторизованный пользователь должен иметь возможность создать игру.
  prerequisites: |
    Открыта главная страница сайта.
  test-data: |
    Отсутствует.
  steps:
    - Нажимаем на кнопку "Try Simple Buttle " 
  expected-result: |     
    Игра успешно создана.
    
- summary: |
    Создание игры с другим пользователем (случайным игроком).
  requirement: |
    Пользователь должен иметь возможность создать игру против другого пользователя (случайного игрока).
  prerequisites: |
    Пользователь авторизован.
  test-data: |
    Отсутствует.
  steps:
    1. Нажимаем на кнопку "With others users" (Game Type). 
    2. Нажимаем на кнопку "Create Battle".
  expected-result: |     
    Успешно создана игра против другого пользователя. Юзер находится в режиме ожидания другого игрока. 

- summary: |
    Создание игры с другом (другим авторизованным пользователем).
  requirement: |
    Пользователь должен иметь возможность создавать игру с любым авторизованным игроком на выбор. 
  prerequisites: |
    Пользователь авторизован.
  test-data: |
    Отсутствует.
  steps:
    1. Нажимаем на кнопку "With a friend" (Game Type).
    2. Во вкладке "Choose opponent" выбираем оппонента. 
    3. Нажимаем на кнопку "Create Battle".
  expected-result: |     
    Игра успешно создана. Юзер находится в режиме ожидания другого игрока. 
    Отправлено приглашение выбранному юзеру (другу).

- summary: |
    Создание игры с другим уровнем сложности.
  requirement: |
    Игрок должен иметь возможность изменять сложность состязаний.
  prerequisites: |
    Пользователь авторизован.
  test-data: |
    Отсутствует.
  steps:
    1. Выбираем четыре звезды в поле "Level".
    2. Нажимаем кнопку "With a bot" (Game Type).
    3. Нажимаем на кнопку "Create Battle".
  expected-result: |     
    Игра четвертого (максимального) уровня сложности успешно создана.   

- summary: |
    Создание игры с конкретным заданием.
  requirement: |
    Игрок должен иметь возможность выбирать задания для состязаний из предложенного списка.
  prerequisites: |
    Пользователь авторизован.
  test-data: |
    Отсутствует.
  steps:
    1. Нажимаем кнопку "With a bot" (Game Type).
    2. Выбираем задание "boom" во вкладке "Choose task by name or tags".
    3. Нажимаем на кнопку "Create Battle".
  expected-result: |     
    Игра по заданию "boom" успешно создана.      

- summary: |
    Проверка возможности победы в игре.
  requirement: |
    Игрок должен иметь возможность побеждать в состязании.
  prerequisites: |
    Пользователь авторизован.
  test-data: |
    const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;
  steps:
    1. Выбираем одну звезду в поле "Level".
    2. Нажимаем кнопку "With a bot" (Game Type).
    3. Выбираем задание "rect_area" во вкладке "Choose task by name or tags".
    4. Нажимаем на кнопку "Create Battle".
    5. В появившеся диалоговом окне выбираем язык node.js 16.17.0
    6. Вводим код из "test-data".
    7. Нажимаем кнопку "Run".
  expected-result: |     
    Появляется сообщение о победе в игре.          

- summary: |
    Проверка возможности проигрыша в игре.
  requirement: |
    Игрок должен иметь возможность проигрывать в состязании.
  prerequisites: |
    Пользователь авторизован.
  test-data: |
    Отсутствует.
  steps:
    1. Нажимаем кнопку "With a bot" (Game Type).
    2. Выставляем ползунок "Time Control" в крайне левое положение.
    3. Нажимаем на кнопку "Create Battle".
    4. Ждем три минуты.
  expected-result: |     
    Появляется сообщение о поражении. 

    
